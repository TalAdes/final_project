{"ast":null,"code":"import rsa from \"node-rsa\"; // import axios from 'axios'\n// Mock of an authentication service\n\nvar Auth = {\n  _isAuthenticated: false,\n  authenticate: function authenticate(name, pass, cb) {\n    var data = {\n      name: name,\n      'password': pass\n    };\n    var key = new rsa();\n    fetch('/get_PK_and_random').then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      var pk = response.pk;\n      var rn = response.rn; //encrypting the pass before sending it to the server\n\n      key.importKey(pk, ['public']); //data['password']+rn inorder to prevenr reply attack\n\n      data.password = key.encrypt(data.password + rn, 'base64');\n      console.log(\"data:\");\n      console.log(data);\n      console.log(\"data.password:\");\n      console.log(data.password);\n      return data;\n    }).catch(function (err) {\n      return console.log(\"get_PK_and_random error: \" + err);\n    }).then(function (data) {\n      return fetch('/new_login', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    }).then(function (res) {\n      return console.log(res);\n    }).catch(function (err) {\n      console.log(err);\n      return \"true\";\n    }); // this._isAuthenticated = true;\n    // setTimeout(\n    //   () =>\n    //     cb({\n    //       name: name\n    //     }),\n    //   100\n    // );\n  },\n  signout: function signout(cb) {\n    this._isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n};\nexport default Auth;","map":{"version":3,"sources":["C:/Users/54646/OneDrive - g.jct.ac.il/תוכנה לאינטרנט/פרויקט גמר הנדסת תוכנה לאינטרנט/final_project_webengineer backend/frontend/src/Auth.js"],"names":["rsa","Auth","_isAuthenticated","authenticate","name","pass","cb","data","key","fetch","then","response","json","pk","rn","importKey","password","encrypt","console","log","catch","err","method","body","JSON","stringify","headers","res","signout","setTimeout"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,UAAhB,C,CACA;AAEA;;AACA,IAAMC,IAAI,GAAG;AACXC,EAAAA,gBAAgB,EAAE,KADP;AAGXC,EAAAA,YAHW,wBAGEC,IAHF,EAGQC,IAHR,EAGcC,EAHd,EAGkB;AAE3B,QAAIC,IAAI,GAAG;AAACH,MAAAA,IAAI,EAAJA,IAAD;AAAM,kBAAaC;AAAnB,KAAX;AACA,QAAIG,GAAG,GAAG,IAAIR,GAAJ,EAAV;AACAS,IAAAA,KAAK,CAAC,oBAAD,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADd,EAESF,IAFT,CAEc,UAASC,QAAT,EAAmB;AACrB,UAAIE,EAAE,GAAGF,QAAQ,CAACE,EAAlB;AACA,UAAIC,EAAE,GAAGH,QAAQ,CAACG,EAAlB,CAFqB,CAKrB;;AACAN,MAAAA,GAAG,CAACO,SAAJ,CAAcF,EAAd,EAAkB,CAAC,QAAD,CAAlB,EANqB,CAOrB;;AACAN,MAAAA,IAAI,CAACS,QAAL,GAAgBR,GAAG,CAACS,OAAJ,CAAYV,IAAI,CAACS,QAAL,GAAcF,EAA1B,EAA6B,QAA7B,CAAhB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACS,QAAjB;AACA,aAAOT,IAAP;AAEC,KAjBb,EAiBea,KAjBf,CAiBqB,UAAAC,GAAG;AAAA,aACRH,OAAO,CAACC,GAAR,CAAY,8BAA4BE,GAAxC,CADQ;AAAA,KAjBxB,EAmBaX,IAnBb,CAmBkB,UAACH,IAAD;AAAA,aACJE,KAAK,CAAC,YAAD,EAAc;AACjBa,QAAAA,MAAM,EAAE,MADS;AAEjBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAelB,IAAf,CAFW;AAGjBmB,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHQ,OAAd,CADD;AAAA,KAnBlB,EA4BahB,IA5Bb,CA4BkB,UAAAiB,GAAG;AAAA,aAAIT,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAAJ;AAAA,KA5BrB,EA6BaP,KA7Bb,CA6BmB,UAAAC,GAAG,EACR;AAACH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,aAAO,MAAP;AAAc,KA/B5B,EAJ2B,CAoC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA/CU;AAiDXO,EAAAA,OAjDW,mBAiDHtB,EAjDG,EAiDC;AACV,SAAKJ,gBAAL,GAAwB,KAAxB;AACA2B,IAAAA,UAAU,CAACvB,EAAD,EAAK,GAAL,CAAV;AACD;AApDU,CAAb;AAuDA,eAAeL,IAAf","sourcesContent":["import rsa from \"node-rsa\"\n// import axios from 'axios'\n\n// Mock of an authentication service\nconst Auth = {\n  _isAuthenticated: false,\n\n  authenticate(name, pass, cb) {\n    \n    var data = {name,'password' : pass}\n    var key = new rsa()\n    fetch('/get_PK_and_random')\n    .then(response => response.json())\n            .then(function(response) {\n                var pk = response.pk;\n                var rn = response.rn;\n\n\n                //encrypting the pass before sending it to the server\n                key.importKey(pk, ['public']);\n                //data['password']+rn inorder to prevenr reply attack\n                data.password = key.encrypt(data.password+rn,'base64')\n                console.log(\"data:\");\n                console.log(data);\n                console.log(\"data.password:\");\n                console.log(data.password);\n                return data\n\n                }).catch(err =>  \n                    console.log(\"get_PK_and_random error: \"+err))\n                .then((data) => \n                  fetch('/new_login',{\n                    method: 'POST',\n                    body: JSON.stringify(data),\n                    headers: {\n                      'Content-Type': 'application/json'\n                    }\n                  })\n                )\n                .then(res => console.log(res))\n                .catch(err =>  \n                  {console.log(err)\n                  return \"true\"})\n    // this._isAuthenticated = true;\n    // setTimeout(\n    //   () =>\n    //     cb({\n    //       name: name\n    //     }),\n    //   100\n    // );\n  },\n\n  signout(cb) {\n    this._isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}