{"ast":null,"code":"var _ = require('../utils')._;\n\nvar utils = require('../utils');\n\nmodule.exports = {\n  privateExport: function privateExport(key, options) {\n    return {\n      n: key.n.toBuffer(),\n      e: key.e,\n      d: key.d.toBuffer(),\n      p: key.p.toBuffer(),\n      q: key.q.toBuffer(),\n      dmp1: key.dmp1.toBuffer(),\n      dmq1: key.dmq1.toBuffer(),\n      coeff: key.coeff.toBuffer()\n    };\n  },\n  privateImport: function privateImport(key, data, options) {\n    if (data.n && data.e && data.d && data.p && data.q && data.dmp1 && data.dmq1 && data.coeff) {\n      key.setPrivate(data.n, data.e, data.d, data.p, data.q, data.dmp1, data.dmq1, data.coeff);\n    } else {\n      throw Error(\"Invalid key data\");\n    }\n  },\n  publicExport: function publicExport(key, options) {\n    return {\n      n: key.n.toBuffer(),\n      e: key.e\n    };\n  },\n  publicImport: function publicImport(key, data, options) {\n    if (data.n && data.e) {\n      key.setPublic(data.n, data.e);\n    } else {\n      throw Error(\"Invalid key data\");\n    }\n  },\n\n  /**\n   * Trying autodetect and import key\n   * @param key\n   * @param data\n   */\n  autoImport: function autoImport(key, data) {\n    if (data.n && data.e) {\n      if (data.d && data.p && data.q && data.dmp1 && data.dmq1 && data.coeff) {\n        module.exports.privateImport(key, data);\n        return true;\n      } else {\n        module.exports.publicImport(key, data);\n        return true;\n      }\n    }\n\n    return false;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}