{"ast":null,"code":"import rsa from \"node-rsa\";\nimport axios from 'axios'; // Mock of an authentication service\n\nvar Auth = {\n  authenticate: function authenticate(name, pass, cb) {\n    var data = {\n      name: name,\n      'password': pass\n    };\n    var key = new rsa();\n    fetch('/get_PK_and_random').then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      var pk = response.pk;\n      var rn = response.rn; //encrypting the pass before sending it to the server\n\n      key.importKey(pk, ['public']); //data['password']+rn inorder to prevenr reply attack\n\n      data.password = key.encrypt(data.password + rn, 'base64');\n      console.log(\"data:\");\n      console.log(data);\n      console.log(\"data.password:\");\n      console.log(data.password);\n      return data;\n    }).catch(function (err) {\n      return console.log(\"get_PK_and_random error: \" + err);\n    }).then(function (data) {\n      return fetch('/login', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    }) // .then(res => res.text())\n    // .then(res => console.log(res))\n    .then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return cb(res);\n    }).catch(function (err) {\n      console.log(err + ';)');\n      cb({\n        'isAuthenticated': false\n      });\n    }); // this._isAuthenticated = true;\n    // setTimeout(\n    //   () =>\n    //     cb({\n    //       name: name\n    //     }),\n    //   100\n    // );\n  },\n  resetPassword: function resetPassword(name, cb) {\n    return axios.post('forgotPassword', {\n      name: name\n    }).then(function (res) {\n      cb(res.data);\n    }).catch(function (err) {\n      console.log(err);\n      cb('Something went wrong, please try again');\n    });\n  },\n  signout: function signout(cb) {\n    return axios.get('logOut').then(function (res) {\n      cb(res.data);\n    }).catch(function (err) {\n      console.log(err);\n      cb('Something went wrong, please try again');\n    }); // this._isAuthenticated = false;\n    // setTimeout(cb, 100);\n  }\n};\nexport default Auth;","map":{"version":3,"sources":["C:/Users/54646/OneDrive - g.jct.ac.il/תוכנה לאינטרנט/פרויקט גמר הנדסת תוכנה לאינטרנט/final_project/frontend/src/Auth.js"],"names":["rsa","axios","Auth","authenticate","name","pass","cb","data","key","fetch","then","response","json","pk","rn","importKey","password","encrypt","console","log","catch","err","method","body","JSON","stringify","headers","res","resetPassword","post","signout","get"],"mappings":"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","sourcesContent":["import rsa from \"node-rsa\"\nimport axios from 'axios'\n\n// Mock of an authentication service\nconst Auth = {\n\n  authenticate(name, pass, cb) {\n    \n    var data = {name,'password' : pass}\n    var key = new rsa()\n    fetch('/get_PK_and_random')\n    .then(response => response.json())\n            .then(function(response) {\n                var pk = response.pk;\n                var rn = response.rn;\n\n\n                //encrypting the pass before sending it to the server\n                key.importKey(pk, ['public']);\n                //data['password']+rn inorder to prevenr reply attack\n                data.password = key.encrypt(data.password+rn,'base64')\n                console.log(\"data:\");\n                console.log(data);\n                console.log(\"data.password:\");\n                console.log(data.password);\n                return data\n\n                }).catch(err =>  \n                    console.log(\"get_PK_and_random error: \"+err))\n                .then((data) => \n                  fetch('/login',{\n                    method: 'POST',\n                    body: JSON.stringify(data),\n                    headers: {\n                      'Content-Type': 'application/json'\n                    }\n                  })\n                )\n                // .then(res => res.text())\n                // .then(res => console.log(res))\n                .then(res => res.json())\n                .then((res) => \n                  cb(res))\n                .catch(err =>  \n                  {console.log(err+';)')\n                  cb({\n                    'isAuthenticated':false,\n                })})\n    // this._isAuthenticated = true;\n    // setTimeout(\n    //   () =>\n    //     cb({\n    //       name: name\n    //     }),\n    //   100\n    // );\n  },\n\n  resetPassword(name, cb) {\n    \n    return axios.post('forgotPassword',{\n      name\n    })\n      .then(res => {\n        cb(res.data)\n      })\n      .catch(err =>  \n        {console.log(err)\n        cb('Something went wrong, please try again')})\n  },\n\n  signout(cb) {\n\n\n    return axios.get('logOut')\n      .then(res => {\n        cb(res.data)\n      })\n      .catch(err =>  \n        {console.log(err)\n        cb('Something went wrong, please try again')})\n    // this._isAuthenticated = false;\n    // setTimeout(cb, 100);\n  }\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}