{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\54646\\\\OneDrive - g.jct.ac.il\\\\\\u05EA\\u05D5\\u05DB\\u05E0\\u05D4 \\u05DC\\u05D0\\u05D9\\u05E0\\u05D8\\u05E8\\u05E0\\u05D8\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8 \\u05D4\\u05E0\\u05D3\\u05E1\\u05EA \\u05EA\\u05D5\\u05DB\\u05E0\\u05D4 \\u05DC\\u05D0\\u05D9\\u05E0\\u05D8\\u05E8\\u05E0\\u05D8\\\\final_project_webengineer backend\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nvar _Auth;\n\nimport rsa from \"node-rsa\"; // import axios from 'axios'\n// Mock of an authentication service\n\nvar Auth = (_Auth = {\n  _isAuthenticated: false,\n  authenticate: function authenticate(name, pass, cb) {\n    var data = {\n      name: name,\n      'password': pass\n    };\n    var key = new rsa();\n    fetch('/get_PK_and_random').then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      var pk = response.pk;\n      var rn = response.rn; //encrypting the pass before sending it to the server\n\n      key.importKey(pk, ['public']); //data['password']+rn inorder to prevenr reply attack\n\n      data.password = key.encrypt(data.password + rn, 'base64');\n      console.log(\"data:\");\n      console.log(data);\n      console.log(\"data.password:\");\n      console.log(data.password);\n      return data;\n    }).catch(function (err) {\n      return console.log(\"get_PK_and_random error: \" + err);\n    }).then(function (data) {\n      return fetch('/new_login', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    }) // .then(res => res.text())\n    // .then(res => console.log(res))\n    .then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return cb(res);\n    }).catch(function (err) {\n      console.log(err + ';)');\n      cb({\n        'isAuthenticated': false\n      });\n    }); // this._isAuthenticated = true;\n    // setTimeout(\n    //   () =>\n    //     cb({\n    //       name: name\n    //     }),\n    //   100\n    // );\n  }\n}, _defineProperty(_Auth, \"authenticate\", function authenticate(name, pass, cb) {\n  var data = {\n    name: name,\n    'password': pass\n  };\n  var key = new rsa();\n  fetch('/get_PK_and_random').then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    var pk = response.pk;\n    var rn = response.rn; //encrypting the pass before sending it to the server\n\n    key.importKey(pk, ['public']); //data['password']+rn inorder to prevenr reply attack\n\n    data.password = key.encrypt(data.password + rn, 'base64');\n    console.log(\"data:\");\n    console.log(data);\n    console.log(\"data.password:\");\n    console.log(data.password);\n    return data;\n  }).catch(function (err) {\n    return console.log(\"get_PK_and_random error: \" + err);\n  }).then(function (data) {\n    return fetch('/new_login', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }) // .then(res => res.text())\n  // .then(res => console.log(res))\n  .then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    return cb(res);\n  }).catch(function (err) {\n    console.log(err + ';)');\n    cb({\n      'isAuthenticated': false\n    });\n  }); // this._isAuthenticated = true;\n  // setTimeout(\n  //   () =>\n  //     cb({\n  //       name: name\n  //     }),\n  //   100\n  // );\n}), _defineProperty(_Auth, \"signout\", function signout(cb) {\n  this._isAuthenticated = false;\n  setTimeout(cb, 100);\n}), _Auth);\nexport default Auth;","map":{"version":3,"sources":["C:/Users/54646/OneDrive - g.jct.ac.il/תוכנה לאינטרנט/פרויקט גמר הנדסת תוכנה לאינטרנט/final_project_webengineer backend/frontend/src/Auth.js"],"names":["rsa","Auth","_isAuthenticated","authenticate","name","pass","cb","data","key","fetch","then","response","json","pk","rn","importKey","password","encrypt","console","log","catch","err","method","body","JSON","stringify","headers","res","setTimeout"],"mappings":"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","sourcesContent":["import rsa from \"node-rsa\"\n// import axios from 'axios'\n\n// Mock of an authentication service\nconst Auth = {\n  _isAuthenticated: false,\n\n  authenticate(name, pass, cb) {\n    \n    var data = {name,'password' : pass}\n    var key = new rsa()\n    fetch('/get_PK_and_random')\n    .then(response => response.json())\n            .then(function(response) {\n                var pk = response.pk;\n                var rn = response.rn;\n\n\n                //encrypting the pass before sending it to the server\n                key.importKey(pk, ['public']);\n                //data['password']+rn inorder to prevenr reply attack\n                data.password = key.encrypt(data.password+rn,'base64')\n                console.log(\"data:\");\n                console.log(data);\n                console.log(\"data.password:\");\n                console.log(data.password);\n                return data\n\n                }).catch(err =>  \n                    console.log(\"get_PK_and_random error: \"+err))\n                .then((data) => \n                  fetch('/new_login',{\n                    method: 'POST',\n                    body: JSON.stringify(data),\n                    headers: {\n                      'Content-Type': 'application/json'\n                    }\n                  })\n                )\n                // .then(res => res.text())\n                // .then(res => console.log(res))\n                .then(res => res.json())\n                .then((res) => \n                  cb(res))\n                .catch(err =>  \n                  {console.log(err+';)')\n                  cb({\n                    'isAuthenticated':false,\n                })})\n    // this._isAuthenticated = true;\n    // setTimeout(\n    //   () =>\n    //     cb({\n    //       name: name\n    //     }),\n    //   100\n    // );\n  },\n\n  authenticate(name, pass, cb) {\n    \n    var data = {name,'password' : pass}\n    var key = new rsa()\n    fetch('/get_PK_and_random')\n    .then(response => response.json())\n            .then(function(response) {\n                var pk = response.pk;\n                var rn = response.rn;\n\n\n                //encrypting the pass before sending it to the server\n                key.importKey(pk, ['public']);\n                //data['password']+rn inorder to prevenr reply attack\n                data.password = key.encrypt(data.password+rn,'base64')\n                console.log(\"data:\");\n                console.log(data);\n                console.log(\"data.password:\");\n                console.log(data.password);\n                return data\n\n                }).catch(err =>  \n                    console.log(\"get_PK_and_random error: \"+err))\n                .then((data) => \n                  fetch('/new_login',{\n                    method: 'POST',\n                    body: JSON.stringify(data),\n                    headers: {\n                      'Content-Type': 'application/json'\n                    }\n                  })\n                )\n                // .then(res => res.text())\n                // .then(res => console.log(res))\n                .then(res => res.json())\n                .then((res) => \n                  cb(res))\n                .catch(err =>  \n                  {console.log(err+';)')\n                  cb({\n                    'isAuthenticated':false,\n                })})\n    // this._isAuthenticated = true;\n    // setTimeout(\n    //   () =>\n    //     cb({\n    //       name: name\n    //     }),\n    //   100\n    // );\n  },\n\n  signout(cb) {\n    this._isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}