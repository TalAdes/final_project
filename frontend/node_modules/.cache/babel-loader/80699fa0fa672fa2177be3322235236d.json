{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\54646\\\\OneDrive - g.jct.ac.il\\\\\\u05EA\\u05D5\\u05DB\\u05E0\\u05D4 \\u05DC\\u05D0\\u05D9\\u05E0\\u05D8\\u05E8\\u05E0\\u05D8\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8 \\u05D4\\u05E0\\u05D3\\u05E1\\u05EA \\u05EA\\u05D5\\u05DB\\u05E0\\u05D4 \\u05DC\\u05D0\\u05D9\\u05E0\\u05D8\\u05E8\\u05E0\\u05D8\\\\final_project\\\\frontend\\\\src\\\\Components\\\\Paging\\\\Paging.js\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Left from \"@material-ui/icons/ChevronLeft\";\nimport Right from \"@material-ui/icons/ChevronRight\";\nimport First from \"@material-ui/icons/FirstPage\";\nimport Last from \"@material-ui/icons/LastPage\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { withStyles } from '@material-ui/core/styles';\n\nvar styles = function styles(theme) {\n  return {\n    input: {\n      textAlign: 'center'\n    }\n  };\n};\n\nvar itemsPerPageOptions = [React.createElement(MenuItem, {\n  key: \"5\",\n  value: \"5\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"5\"), React.createElement(MenuItem, {\n  key: \"10\",\n  value: \"10\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"10\"), React.createElement(MenuItem, {\n  key: \"50\",\n  value: \"50\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"50\")];\n\nvar Paging = function Paging(props) {\n  var itemsPerPage = props.getParamFromQS(\"itemsPerPage\"); // Compute total number of pages.\n\n  var totalPages = Math.ceil(props.wholeDataLength / parseInt(itemsPerPage));\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      marginBottom: 10,\n      marginTop: 15,\n      height: 60,\n      fontSize: 13,\n      color: \"gray\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    size: \"small\",\n    color: \"primary\",\n    disabled: props.getParamFromQS(\"page\") === \"1\",\n    onClick: function onClick() {\n      props.updateURLAndRedirect({\n        page: 1\n      });\n    },\n    style: {\n      marginRight: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(First, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    size: \"small\",\n    color: \"primary\",\n    disabled: props.getParamFromQS(\"page\") === \"1\",\n    onClick: function onClick() {\n      var val = parseInt(props.getParamFromQS(\"page\"), 0) - 1;\n      props.updateURLAndRedirect({\n        page: val\n      });\n    },\n    style: {\n      marginRight: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Left, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), \"Page:\", React.createElement(TextField, {\n    type: \"number\",\n    style: {\n      marginLeft: 5,\n      width: 50,\n      marginRight: 10\n    },\n    inputProps: {\n      className: props.classes.input\n    },\n    value: props.getParamFromQS(\"page\"),\n    onChange: function onChange(e) {\n      var val = e.target.value;\n      if (parseInt(val, 0) > totalPages || parseInt(val, 0) < 1) return;\n      props.updateURLAndRedirect({\n        page: val\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), \"of \", totalPages, React.createElement(IconButton, {\n    size: \"small\",\n    color: \"primary\",\n    disabled: props.getParamFromQS(\"page\") === totalPages.toString(),\n    onClick: function onClick() {\n      var val = parseInt(props.getParamFromQS(\"page\"), 0) + 1;\n      props.updateURLAndRedirect({\n        page: val\n      });\n    },\n    style: {\n      marginLeft: 10,\n      marginRight: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Right, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    size: \"small\",\n    color: \"primary\",\n    disabled: props.getParamFromQS(\"page\") === totalPages.toString(),\n    onClick: function onClick() {\n      props.updateURLAndRedirect({\n        page: totalPages\n      });\n    },\n    style: {\n      marginRight: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Last, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    style: {\n      marginRight: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \" Items per page: \"), React.createElement(Select, {\n    value: itemsPerPage,\n    onChange: function onChange(e) {\n      props.updateURLAndRedirect({\n        itemsPerPage: e.target.value\n      }, true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, itemsPerPageOptions), React.createElement(\"span\", {\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \" \", \"Total items: \", props.wholeDataLength, \" \"));\n};\n\nexport default withStyles(styles)(Paging);","map":{"version":3,"sources":["C:/Users/54646/OneDrive - g.jct.ac.il/תוכנה לאינטרנט/פרויקט גמר הנדסת תוכנה לאינטרנט/final_project/frontend/src/Components/Paging/Paging.js"],"names":["React","TextField","MenuItem","Select","Left","Right","First","Last","IconButton","withStyles","styles","theme","input","textAlign","itemsPerPageOptions","Paging","props","itemsPerPage","getParamFromQS","totalPages","Math","ceil","wholeDataLength","parseInt","display","marginBottom","marginTop","height","fontSize","color","alignItems","updateURLAndRedirect","page","marginRight","val","marginLeft","width","className","classes","e","target","value","toString"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Left from \"@material-ui/icons/ChevronLeft\";\nimport Right from \"@material-ui/icons/ChevronRight\";\nimport First from \"@material-ui/icons/FirstPage\";\nimport Last from \"@material-ui/icons/LastPage\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  input: {\n      textAlign: 'center'\n  }\n});\n\nconst itemsPerPageOptions = [\n  <MenuItem key={\"5\"} value={\"5\"}>\n    5\n  </MenuItem>,\n  <MenuItem key={\"10\"} value={\"10\"}>\n    10\n  </MenuItem>,\n  <MenuItem key={\"50\"} value={\"50\"}>\n    50\n  </MenuItem>\n];\n\n\nconst Paging = props => {\n  let itemsPerPage = props.getParamFromQS(\"itemsPerPage\");\n\n  // Compute total number of pages.\n  let totalPages = Math.ceil(props.wholeDataLength / parseInt(itemsPerPage));\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        marginBottom: 10,\n        marginTop: 15,\n        height: 60,\n        fontSize: 13,\n        color: \"gray\",\n        alignItems: \"center\"\n      }}\n    >\n      <IconButton\n        size=\"small\"\n        color=\"primary\"\n        disabled={props.getParamFromQS(\"page\") === \"1\"}\n        onClick={() => {\n          props.updateURLAndRedirect({ page: 1 });\n        }}\n        style={{ marginRight: 10 }}\n      >\n        <First />\n      </IconButton>\n      <IconButton\n        size=\"small\"\n        color=\"primary\"\n        disabled={props.getParamFromQS(\"page\") === \"1\"}\n        onClick={() => {\n          let val = parseInt(props.getParamFromQS(\"page\"), 0) - 1;\n          props.updateURLAndRedirect({ page: val });\n        }}\n        style={{ marginRight: 10 }}\n      >\n        <Left />\n      </IconButton>\n      Page:\n      <TextField\n        type=\"number\"\n        style={{ marginLeft: 5, width: 50,  marginRight: 10 }}\n        inputProps={{\n          className:props.classes.input\n        }}\n        value={props.getParamFromQS(\"page\")}\n        onChange={e => {\n          let val = e.target.value;\n          if (parseInt(val, 0) > totalPages || parseInt(val, 0) < 1) return;\n          props.updateURLAndRedirect({ page: val });\n        }}\n      />\n      of {totalPages}\n      <IconButton\n        size=\"small\"\n        color=\"primary\"\n        disabled={props.getParamFromQS(\"page\") === totalPages.toString()}\n        onClick={() => {\n          let val = parseInt(props.getParamFromQS(\"page\"), 0) + 1;\n          props.updateURLAndRedirect({ page: val });\n        }}\n        style={{ marginLeft: 10, marginRight: 10 }}\n      >\n        <Right />\n      </IconButton>\n      <IconButton\n        size=\"small\"\n        color=\"primary\"\n        disabled={props.getParamFromQS(\"page\") === totalPages.toString()}\n        onClick={() => {\n          props.updateURLAndRedirect({ page: totalPages });\n        }}\n        style={{ marginRight: 10 }}\n      >\n        <Last />\n      </IconButton>\n      <span style={{ marginRight: 10 }}> Items per page: </span>\n      <Select\n        value={itemsPerPage}\n        onChange={e => {\n          props.updateURLAndRedirect({ itemsPerPage: e.target.value }, true);\n        }}\n      >\n        {itemsPerPageOptions}\n      </Select>\n      <span style={{ marginLeft: 10 }}>\n        {\" \"}\n        Total items: {props.wholeDataLength}{\" \"}\n      </span>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Paging);\n"]},"metadata":{},"sourceType":"module"}