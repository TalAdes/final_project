{"ast":null,"code":"var BigInteger = require('../libs/jsbn.js');\n\nvar schemes = require('../schemes/schemes.js');\n\nmodule.exports = function (keyPair, options) {\n  var pkcs1Scheme = schemes.pkcs1.makeScheme(keyPair, options);\n  return {\n    encrypt: function encrypt(buffer, usePrivate) {\n      var m, c;\n\n      if (usePrivate) {\n        /* Type 1: zeros padding for private key encrypt */\n        m = new BigInteger(pkcs1Scheme.encPad(buffer, {\n          type: 1\n        }));\n        c = keyPair.$doPrivate(m);\n      } else {\n        m = new BigInteger(keyPair.encryptionScheme.encPad(buffer));\n        c = keyPair.$doPublic(m);\n      }\n\n      return c.toBuffer(keyPair.encryptedDataLength);\n    },\n    decrypt: function decrypt(buffer, usePublic) {\n      var m,\n          c = new BigInteger(buffer);\n\n      if (usePublic) {\n        m = keyPair.$doPublic(c);\n        /* Type 1: zeros padding for private key decrypt */\n\n        return pkcs1Scheme.encUnPad(m.toBuffer(keyPair.encryptedDataLength), {\n          type: 1\n        });\n      } else {\n        m = keyPair.$doPrivate(c);\n        return keyPair.encryptionScheme.encUnPad(m.toBuffer(keyPair.encryptedDataLength));\n      }\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}